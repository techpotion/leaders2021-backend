syntax = "proto3";

package api;

option go_package = "gen/pb";

import public "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api/annotations.proto";
import public "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-openapiv2/options/annotations.proto";
import public "github.com/TheSDTM/protoc-gen-gorm/options/gorm.proto";
import public "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import public "google/protobuf/any.proto";

import public "enums.proto";

message Point {
    option (gorm.opts).ormable = true;
    float lat = 1 [(validate.rules).float = {gte: -90,  lte: 90}];
    float lng = 2 [(validate.rules).float = {gte: -180, lte: 180}];
}

message LineString {
    repeated Point points = 1;
}

message MultiLineString {
    repeated LineString lineStrings = 1;
}

message MultiPoint {
    repeated Point points = 1;
}

message Polygon {
    repeated Point points = 1;
}

message MultiPolygon {
    repeated Polygon polygons = 1;
}

message Pagination {
    uint32 pageNumber = 1;
    uint32 resultsPerPage = 2;
}

message ListStats {
    uint32 count = 1;
}

message SportsObject {
    option (gorm.opts).ormable = true;
    option (gorm.opts).table = "objects";
    uint32 objectId = 1;
    string objectName = 2;
    string objectAddress = 3;
    Point objectPoint = 4 [(gorm.field).tag = {embedded: true, embedded_prefix: "object_point_", not_null: true}];
    uint32 departmentalOrganizationId = 5;
    string departmentalOrganizationName = 6;
    uint32 availability = 7;
    double objectSumSquare = 8;
}

message SportsObjectDetailed {
    option (gorm.opts).ormable = true;
    option (gorm.opts).table = "objects_detailed";
    uint32 objectId = 1;
    string objectName = 2;
    string sportsAreaAddress = 3;
    Point objectPoint = 4 [(gorm.field).tag = {embedded: true, embedded_prefix: "object_point_", not_null: true}];
    uint32 departmentalOrganizationId = 5;
    string departmentalOrganizationName = 6;
    uint32 sportsAreaId = 7;
    string sportsAreaName = 8;
    string sportsAreaType = 9;
    double sportsAreaSquare = 10;
    uint32 availability = 11;
    string sportKind = 12;
}

message Park {
    option (gorm.opts).ormable = true;
    string commonName = 1;
    string admArea = 2;
    string district = 3;
    string location = 4;
    bool hasSportground = 5;
    Point objectPoint = 6 [(gorm.field).tag = {embedded: true, embedded_prefix: "center_point_", not_null: true}];
    double square = 7;
}

message Pollution {
    option (gorm.opts).ormable = true;
    string admArea = 1;
    string district = 2;
    string location = 3;
    bool isPolluted = 4;
    Point objectPoint = 5 [(gorm.field).tag = {embedded: true, embedded_prefix: "center_point_", not_null: true}];
    string results = 6;
}

message CirclesCluster {
    option (gorm.opts).ormable = true;
    string geojson = 1;
    double square = 2;
}

message Region {
    option (gorm.opts).ormable = true;
    string region = 1;
    double square = 2;
    double density = 3;
    double population = 4;
}

message Subway {
    option (gorm.opts).ormable = true;
    option (gorm.opts).table = "subway_stations";
    string name = 1;
    string lineColor = 2;
    Point point = 3 [(gorm.field).tag = {embedded: true, embedded_prefix: "point_", not_null: true}];
    double distanceFromPolygon = 4; // optional
}